{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","listUsers","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderitems","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","substing","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"gLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC7BnBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAA6B,6BAC7BC,EAA2B,2BCH3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAG3BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBC/BpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCO7BC,GAAUC,0BAAgB,CAC5BC,YCNgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,KAAKhF,EACH,MAAO,CAAEiF,SAAS,EAAMH,SAAU,IACpC,KAAK7E,EACH,MAAO,CACLgF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAEzB,KAAKlF,EACH,MAAO,CAAE+E,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDPXS,eCWmC,WAG/B,IAFJT,EAEG,uDAFK,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACG,uCACH,OAAQA,EAAOC,MACb,KAAK7E,EACH,OAAO,2BAAK0E,GAAZ,IAAmBI,SAAS,IAC9B,KAAK7E,EACH,MAAO,CAAE6E,SAAS,EAAOM,QAASR,EAAOG,SAC3C,KAAK7E,EACH,MAAO,CAAE4E,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDtBXY,cC0BkC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAK1E,EACH,MAAO,CAAE2E,SAAS,GACpB,KAAK1E,EACH,MAAO,CAAE0E,SAAS,EAAOS,SAAS,GACpC,KAAKlF,EACH,MAAO,CAAEyE,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDlCXc,cCsCkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKvE,EACH,MAAO,CAAEwE,SAAS,GACpB,KAAKvE,EACH,MAAO,CAAEuE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,KAAKvE,EACH,MAAO,CAAEsE,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKtE,EACH,MAAO,GACT,QACE,OAAOiE,IDhDXe,cCoDkC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,KAAKnE,EACH,MAAO,CAAEoE,SAAS,GACpB,KAAKnE,EACH,MAAO,CAAEmE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,KAAKnE,EACH,MAAO,CAAEkE,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAKlE,EACH,MAAO,CAAEuE,QAAS,IACpB,QACE,OAAOV,ID9DXgB,oBCkEwC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAK/D,EACH,MAAO,CAAEgE,SAAS,GACpB,KAAK/D,EACH,MAAO,CAAE+D,SAAS,EAAOS,SAAS,GACpC,KAAKvE,EACH,MAAO,CAAE8D,SAAS,EAAOI,MAAON,EAAOG,SACzC,KAAK9D,EACH,MAAO,GACT,QACE,OAAOyD,ID5EXiB,gBCgFoC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC1E,OAAQA,EAAOC,MACb,KAAK3D,EACH,MAAO,CAAE4D,SAAS,EAAMH,SAAU,IACpC,KAAKxD,EACH,MAAO,CAAE2D,SAAS,EAAOH,SAAUC,EAAOG,SAC5C,KAAK3D,EACH,MAAO,CAAE0D,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDxFXkB,KEjCuB,WAA4D,IAA3DlB,EAA0D,uDAAlD,CAACmB,UAAW,GAAIC,gBAAiB,IAAMlB,EAAW,uCAClF,OAAQA,EAAOC,MACX,KAAKxD,EACD,IAAM0E,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAC/D,OAAGY,EACQ,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAAIA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAG1E,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAG5C,KAAKzE,EACD,OAAO,2BACAoD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEd,UAAYR,EAAOG,aAEpE,KAAKxD,EACD,OAAO,2BACAmD,GADP,IAEIoB,gBAAiBlB,EAAOG,UAEhC,KAAKvD,EACD,OAAO,2BACAkD,GADP,IAEI2B,cAAezB,EAAOG,UAE9B,QACI,OAAOL,IFCf4B,UGb4B,WAA0B,IAAzB5B,EAAwB,uDAAhB,GAAKE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKpD,EACD,MAAO,CAAEqD,SAAS,GACtB,KAAKpD,EACD,MAAO,CAAEoD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKpD,EACD,MAAO,CAAEmD,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKnD,EACD,MAAO,GACX,QACI,OAAO8C,IHGf8B,aGA+B,WAA0B,IAAzB9B,EAAwB,uDAAhB,GAAKE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKhD,EACD,MAAO,CAAEiD,SAAS,GACtB,KAAKhD,EACD,MAAO,CAAEgD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKhD,EACD,MAAO,CAAE+C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHRf+B,YGY8B,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK7C,EACD,OAAO,2BAAK0C,GAAZ,IAAmBI,SAAS,IAChC,KAAK7C,EACD,MAAO,CAAE6C,SAAS,EAAO4B,KAAM9B,EAAOG,SAC1C,KAAK7C,EACD,MAAO,CAAE4C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK5C,EACD,MAAO,CACHuE,KAAM,IAEd,QACI,OAAOhC,IHxBfiC,kBG4BoC,WAA0B,IAAzBjC,EAAwB,uDAAhB,GAAKE,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKzC,EACD,MAAO,CAAE0C,SAAS,GACtB,KAAKzC,EACD,MAAO,CAAEyC,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC7D,KAAKzC,EACD,MAAO,CAAEwC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHpCfkC,SGwC2B,WAAmC,IAAlClC,EAAiC,uDAAzB,CAAEmC,MAAO,IAAKjC,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKtC,GACD,MAAO,CAAEuC,SAAS,GACtB,KAAKtC,GACD,MAAO,CAAEsC,SAAS,EAAO+B,MAAOjC,EAAOG,SAC3C,KAAKtC,GACD,MAAO,CAAEqC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKrC,GACD,MAAO,CACHmE,MAAO,IAEf,QACI,OAAOnC,IHpDfoC,WGwD6B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKlC,GACD,MAAO,CAAEmC,SAAS,GACtB,KAAKlC,GACD,MAAO,CAAEkC,SAAS,EAAOS,SAAS,GACtC,KAAK1C,GACD,MAAO,CAAEiC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHhEfqC,WGoE6B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAK/B,GACD,MAAO,CAAEgC,SAAS,GACtB,KAAK/B,GACD,MAAO,CAAE+B,SAAS,EAAOS,SAAS,GACtC,KAAKvC,GACD,MAAO,CAAE8B,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK9B,GACD,MAAO,CACHyD,KAAM,IAEd,QACI,OAAOhC,IHhFfsC,YIxB8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAOA,EAAOC,MACV,KAAK3B,GACD,MAAO,CACH4B,SAAS,GAEjB,KAAK3B,GACD,MAAO,CACH2B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAEtB,KAAK3B,GACD,MAAO,CACH0B,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJOfwC,aIH+B,WAA6E,IAA5ExC,EAA2E,uDAAnE,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAAMlB,EAAW,uCAC3G,OAAOA,EAAOC,MACV,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAEjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACTmC,MAAOrC,EAAOG,SAEtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJdf0C,SIkB2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAEjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAEjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKpB,GACD,MAAO,GACX,QACI,OAAOe,IJpCf2C,aIwC+B,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAOA,EAAOC,MACV,KAAKV,GACD,MAAO,CACHW,SAAS,GAEjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAEjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKT,GACD,MAAO,GACX,QACI,OAAOI,IJ1Df4C,YI8D8B,WAAoC,IAAnC5C,EAAkC,uDAA1B,CAAE6C,OAAQ,IAAK3C,EAAW,uCACjE,OAAOA,EAAOC,MACV,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAEjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKhB,GACD,MAAO,CACHkD,MAAO,IAEf,QACI,OAAOvC,IJlFf8C,UIsF4B,WAAoC,IAAnC9C,EAAkC,uDAA1B,CAAE6C,OAAQ,IAAK3C,EAAW,uCAC/D,OAAOA,EAAOC,MACV,KAAKb,GACD,MAAO,CACHc,SAAS,GAEjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,MJnGb+C,GAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE3GG,GAAsBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAIxGI,GAAe,CACjBnC,KAAM,CAAEC,UAAW4B,GAAsB3B,gBAHV4B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAI/HrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAOLC,GALDC,sBACV5D,GACAwD,GACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,oHK5C5BM,GA1BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACDC,mBAAS,IADR,oBACxBC,EADwB,KACfC,EADe,KAW/B,OACI,gBAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACCL,EAAQM,OACPR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAIcC,QAAM,EAArC,UACI,eAACN,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACLsE,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACrCC,YAAY,qBACZC,UAAU,oBACd,eAACC,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,kBAAkBF,UAAU,MAA1D,wB,gDCyCCG,GAAS,kBAAM,SAACC,GACzBlC,aAAamC,WAAW,YACxBD,EAAS,CAAE/E,KAAMjD,IACjBgI,EAAS,CAAE/E,KAAM1C,IACjByH,EAAS,CAAE/E,KAAMd,KACjB6F,EAAS,CAAE/E,KAAMnC,OA0CRoH,GAAiB,SAACC,GAAD,gDAAQ,WAAOH,EAAUI,GAAjB,wBAAAC,EAAA,sEAE9BL,EAAS,CACL/E,KAAM7C,IAHoB,EAMMgI,IAAfzD,EANS,EAMtBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAXZ,SAePC,KAAMC,IAAN,qBAAwBR,GAAMG,GAfvB,gBAetBM,EAfsB,EAetBA,KAERZ,EAAS,CACL/E,KAAM5C,EACN8C,QAASyF,IAnBiB,kDAuB9BZ,EAAS,CACL/E,KAAM3C,EACN6C,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3Bc,0DAAR,yDAgEjBC,GAAY,2DAAM,WAAOf,EAAUI,GAAjB,wBAAAC,EAAA,sEAEvBL,EAAS,CACL/E,KAAMtC,KAHa,EAMayH,IAAfzD,EANE,EAMfD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY7D,EAAS8D,SAVnB,SAcAC,KAAMC,IAAN,aAAwBL,GAdxB,gBAcfM,EAde,EAcfA,KAERZ,EAAS,CACL/E,KAAMrC,GACNuC,QAASyF,IAlBU,kDAsBvBZ,EAAS,CACL/E,KAAMpC,GACNsC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1BO,0DAAN,yDC9GVE,GAxDA,WACX,IAAMhB,EAAWiB,cAGRtE,EADSuE,aAAY,SAAApG,GAAK,OAAIA,EAAM4B,aACpCC,SAKT,OACI,kCACI,eAACwE,GAAA,EAAD,CAAQC,GAAG,OAAOtB,QAAQ,OAAOuB,OAAO,KAAKC,kBAAgB,EAA7D,SACI,gBAACC,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACL,GAAA,EAAOM,MAAR,wBAEZ,eAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,gBAACR,GAAA,EAAOS,SAAR,CAAiBzB,GAAG,mBAApB,UACI,eAAC,KAAD,CAAO0B,OAAQ,gBAAGlD,EAAH,EAAGA,QAAH,OAAiB,eAAC,GAAD,CAAWA,QAASA,OACpD,gBAACmD,GAAA,EAAD,CAAKlC,UAAU,UAAf,UACA,eAAC,iBAAD,CAAe4B,GAAG,QAAlB,SACI,gBAACM,GAAA,EAAIC,KAAL,WAAU,oBAAGnC,UAAU,yBAAvB,YAEHjD,EACG,gBAACqF,GAAA,EAAD,CAAaC,MAAOtF,EAAS4C,KAAMY,GAAG,WAAtC,UACI,eAAC,iBAAD,CAAeqB,GAAG,WAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,wBAEJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAtBhB,WAClBnC,EAASD,OAqBO,uBAEH,eAAC,iBAAD,CAAeyB,GAAG,SAAlB,SACL,gBAACM,GAAA,EAAIC,KAAL,WAAU,oBAAGnC,UAAU,gBAAvB,eAGHjD,GAAYA,EAASyF,SAClB,gBAACJ,GAAA,EAAD,CAAaC,MAAM,QAAQ9B,GAAG,YAA9B,UACA,eAAC,iBAAD,CAAeqB,GAAG,kBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,sBAEJ,eAAC,iBAAD,CAAeV,GAAG,qBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,yBAEJ,eAAC,iBAAD,CAAeV,GAAG,mBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,wC,mBClCLG,GAdA,WACX,OACI,kCACI,eAACd,GAAA,EAAD,UACI,eAACe,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAK3C,UAAU,mBAAf,2C,UCJd4C,GAAS,SAAC,GAA4B,IAA1B9C,EAAyB,EAAzBA,MAAO+C,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACI,uBAAK9C,UAAU,SAAf,UACI,gCACI,oBAAG+C,MAAO,CAACD,SAAQ9C,UACfF,GAAS,EACP,cACAA,GAAS,GACT,uBACA,kBAEV,gCACI,oBAAGiD,MAAO,CAACD,SAAQ9C,UACfF,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAEV,gCACI,oBAAGiD,MAAO,CAACD,SAAQ9C,UACfF,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAEV,gCACI,oBAAGiD,MAAO,CAACD,SAAQ9C,UACfF,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAEV,gCACI,oBAAGiD,MAAO,CAACD,SAAQ9C,UACfF,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAEV,gCAAO+C,GAAQA,QAK3BD,GAAOI,aAAe,CAClBF,MAAO,WASIF,UCjCAK,GAxBC,SAAC,GAAiB,IAAfrH,EAAc,EAAdA,QACf,OACI,gBAACsH,GAAA,EAAD,CAAMlD,UAAU,mBAAhB,UACI,eAAC,QAAD,CAAM4B,GAAE,mBAAchG,EAAQuH,KAA9B,SACI,eAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKzH,EAAQ0H,MAAOpD,QAAQ,UAG1C,gBAACgD,GAAA,EAAKK,KAAN,WACA,eAAC,QAAD,CAAM3B,GAAE,mBAAchG,EAAQuH,KAA9B,SACI,eAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,kCAAS7H,EAAQ+D,WAIzB,eAACuD,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,eAAC,GAAD,CAAQ3D,MAAOlE,EAAQ+H,OAAQd,KAAI,UAAKjH,EAAQgI,WAAb,gBAGvC,gBAACV,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cAAqB7H,EAAQiI,gB,UCpBnCC,GAAU,SAAC,GAA2B,IAAzB5D,EAAwB,EAAxBA,QAAS6D,EAAe,EAAfA,SACxB,OACI,eAACC,GAAA,EAAD,CAAO9D,QAASA,EAAhB,SACK6D,KAMbD,GAAQd,aAAe,CACnB9C,QAAS,QAEE4D,U,UCKAG,GAjBA,WACX,OACI,eAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLrB,MAAO,CACHsB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,SAPjB,SAUI,uBAAMxE,UAAU,UAAhB,2B,UCYGyE,GAvBE,SAAC,GAAoD,IAAlDjJ,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApC+G,eAAoC,aAAnBvD,eAAmB,MAAT,GAAS,EAEjE,OAAOzD,EAAQ,GACX,eAACkJ,GAAA,EAAD,UACK,YAAIC,MAAMnJ,GAAOoJ,QAAQjI,KAAI,SAAAD,GAAC,OAC3B,eAAC,iBAAD,CAEIkF,GACKY,EAAD,6BAIgC9F,EAAE,GAH5BuC,EAAO,kBACQA,EADR,iBACwBvC,EAAE,GAD1B,gBAEMA,EAAE,GAN7B,SASI,eAACgI,GAAA,EAAWpC,KAAZ,CAAiBuC,OAAQnI,EAAE,IAAMjB,EAAjC,SACKiB,EAAE,KATFA,EAAI,SCgBhBoI,GAAe,eAAC7F,EAAD,uDAAW,GAAI8F,EAAf,uDAA4B,GAA5B,gDAAmC,WAC7D3E,GAD6D,kBAAAK,EAAA,sEAI3DL,EAAS,CAAE/E,KAAMhF,IAJ0C,SAMpCyK,KAAMC,IAAN,gCACI9B,EADJ,uBAC0B8F,IAPU,gBAMnD/D,EANmD,EAMnDA,KAIRZ,EAAS,CACP/E,KAAM/E,EACNiF,QAASyF,IAZgD,gDAe3DZ,EAAS,CACP/E,KAAM9E,EACNgF,QACE,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UApB6C,yDAAnC,uDAyBf8D,GAAqB,SAACzE,GAAD,gDAAQ,WAAOH,GAAP,kBAAAK,EAAA,sEAEtCL,EAAS,CAAE/E,KAAM7E,IAFqB,SAIfsK,KAAMC,IAAN,wBAA2BR,IAJZ,gBAI9BS,EAJ8B,EAI9BA,KAERZ,EAAS,CACP/E,KAAM5E,EACN8E,QAASyF,IAR2B,gDAWtCZ,EAAS,CACP/E,KAAM3E,EACN6E,QACE,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhBwB,yDAAR,uD,oBCdnB+D,GA5BS,WACpB,IAAM7E,EAAWiB,cAEXlF,EAAkBmF,aAAY,SAAApG,GAAK,OAAIA,EAAMiB,mBAC3Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJA+J,qBAAU,WACN9E,EDoNuB,yCAAM,WAAOA,GAAP,kBAAAK,EAAA,sEAEjCL,EAAS,CAAE/E,KAAM3D,IAFgB,SAIVoJ,KAAMC,IAAN,qBAJU,gBAIzBC,EAJyB,EAIzBA,KAERZ,EAAS,CACP/E,KAAM1D,EACN4D,QAASyF,IARsB,gDAWjCZ,EAAS,CACP/E,KAAMzD,EACN2D,QACE,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhBmB,yDAAN,yDCnNxB,CAACd,IAEG9E,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAC7D,eAACyJ,GAAA,EAAD,CAAUC,MAAM,QAAQpF,UAAU,UAAlC,SACK7E,EAASwB,KAAI,SAACf,GAAD,OACV,eAACuJ,GAAA,EAAS7C,KAAV,UACI,gBAAC,QAAD,CAAMV,GAAE,mBAAchG,EAAQuH,KAA9B,UACI,eAACkC,GAAA,EAAD,CAAOhC,IAAKzH,EAAQ0H,MAAOgC,IAAK1J,EAAQ+D,KAAM4F,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkBxF,UAAU,mBAA5B,SACI,gCACKpE,EAAQ+D,KADb,MACsB/D,EAAQiI,MAD9B,aAJQjI,EAAQuH,W,SCnBtCsC,GAAO,SAAC,GAAsC,IAApCpD,EAAmC,EAAnCA,MAAOqD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChC,OACI,gBAACC,GAAA,EAAD,WACI,iCAAQvD,IACR,uBAAM1C,KAAK,cAAckG,QAASH,IAClC,uBAAM/F,KAAK,UAAUkG,QAASF,QAK1CF,GAAKzC,aAAe,CAChBX,MAAO,qBACPqD,YAAa,sCACbC,SAAU,kDAGCF,UCuCAK,GA5CI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZ9G,EAAU8G,EAAMC,OAAO/G,QAEvB8F,EAAagB,EAAMC,OAAOjB,YAAc,EAExC3E,EAAWiB,cAEXpG,EAAcqG,aAAY,SAAApG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAMxC,OAJA0J,qBAAU,WACN9E,EAAS0E,GAAa7F,EAAS8F,MAChC,CAAC3E,EAAUnB,EAAS8F,IAGnB,uCACA,eAAC,GAAD,IACE9F,EAAgC,eAAC,QAAD,CAAM2C,GAAG,IAAI5B,UAAU,gBAAvB,qBAAtB,eAAC,GAAD,IACR,kDACC1E,EACG,eAAC,GAAD,IACAI,EACA,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACA,eAACgH,GAAA,EAAD,UACKvH,EAASwB,KAAI,SAAAf,GAAO,OACjB,eAAC+G,GAAA,EAAD,CAAuBsD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,eAAC,GAAD,CAASxK,QAASA,KADZA,EAAQuH,UAK1B,eAAC,GAAD,CACI3H,MAAOA,EACPC,KAAMA,EACNwD,QAASA,GAAoB,Y,UCuJlCoH,GA7LO,SAAC,GAAwB,IAAtBtH,EAAqB,EAArBA,QAASgH,EAAY,EAAZA,MAAY,EACpB/G,mBAAS,GADW,oBACnCsH,EADmC,KAC9BC,EAD8B,OAEdvH,mBAAS,GAFK,oBAEnC2E,EAFmC,KAE3B6C,EAF2B,OAGZxH,mBAAS,IAHG,oBAGnCyH,EAHmC,KAG1BC,EAH0B,KAIpCtG,EAAWiB,cAEX1F,EAAiB2F,aAAY,SAACpG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADUuE,aAAY,SAACpG,GAAD,OAAWA,EAAM4B,aACvCC,SAEFb,EAAsBoF,aAAY,SAACpG,GAAD,OAAWA,EAAMgB,uBACxCyK,EAAoDzK,EAA7DH,QAAsC6K,EAAuB1K,EAA9BR,MAEvCwJ,qBAAU,WACHyB,IACCE,MAAM,qBACNL,EAAU,GACVE,EAAW,IACXtG,EAAS,CAAE/E,KAAM5D,KAErB2I,EAAS4E,GAAmBe,EAAMC,OAAOzF,OAC1C,CAACH,EAAU2F,EAAOY,IAcrB,OACI,uCAEA,eAAC,QAAD,CAAM3G,UAAU,qBAAqB4B,GAAG,IAAxC,qBAGCtG,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACvD,uCACA,eAAC,GAAD,CAAM2G,MAAOzG,EAAQ+D,OACzB,gBAAC+C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CAAOhC,IAAKzH,EAAQ0H,MAAOgC,IAAK1J,EAAQ+D,KAAM4F,OAAK,MAEvD,eAAC5C,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAUxE,KAAX,UACI,8BAAK1G,EAAQ+D,SAEjB,eAACmH,GAAA,EAAUxE,KAAX,UACI,eAAC,GAAD,CAAQxC,MAAOlE,EAAQ+H,OAAQd,KAAI,UAAKjH,EAAQgI,WAAb,gBAEvC,gBAACkD,GAAA,EAAUxE,KAAX,sBACa1G,EAAQiI,SAErB,gBAACiD,GAAA,EAAUxE,KAAX,2BACkB1G,EAAQ8J,oBAIlC,eAAC/C,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAAChD,GAAA,EAAD,UACI,gBAAC4D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBAGA,eAACA,GAAA,EAAD,UACI,wCACM/G,EAAQiI,gBAK1B,eAACiD,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBAGA,eAACA,GAAA,EAAD,UACK/G,EAAQmL,aAAe,EAAI,WAAa,sBAKpDnL,EAAQmL,aAAe,GACpB,eAACD,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,UACI,eAACxD,GAAA,EAAKO,QAAN,CAAc+D,GAAG,SAAS3D,MAAOwG,EAAK1G,SAAU,SAACP,GAAD,OAAOkH,EAAOlH,EAAEQ,OAAOC,QAAvE,SACK,YAAI6E,MAAM/I,EAAQmL,cAAcnC,QAAQjI,KAAI,SAACD,GAAD,OACzC,yBAAoBoD,MAAOpD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAUzC,eAACoK,GAAA,EAAUxE,KAAX,UACI,eAACrC,GAAA,EAAD,CACIsC,QAtFH,WACrBxD,EAAQS,KAAR,gBAAsBuG,EAAMC,OAAOzF,GAAnC,gBAA6C+F,KAsFrBtG,UAAU,YACV3E,KAAK,SACL2L,SAAmC,IAAzBpL,EAAQmL,aAJtB,qCAYpB,eAACrE,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,0CAC4B,IAA3BtK,EAAQC,QAAQoL,QAAgB,eAAC,GAAD,yBACjC,gBAACH,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACKtE,EAAQC,QAAQc,KAAI,SAAAuK,GAAM,OACvB,gBAACJ,GAAA,EAAUxE,KAAX,WACI,kCACK4E,EAAOvH,OAEZ,eAAC,GAAD,CAAQG,MAAOoH,EAAOvD,SACtB,6BACKuD,EAAOC,UAAUC,UAAU,EAAG,MAEnC,6BACKF,EAAOT,YATKS,EAAO/D,QAahC,gBAAC2D,GAAA,EAAUxE,KAAX,WACI,0DACCsE,GAAsB,eAAC,GAAD,CAAS1G,QAAQ,SAAjB,SAClB0G,IAEJ7J,EACG,gBAACoC,GAAA,EAAD,CAAMC,SAtHR,SAACC,GJoJQ,IAACgI,EAAWH,EInJvC7H,EAAEC,iBACFc,GJkJ4BiH,EIlJCtB,EAAMC,OAAOzF,GJkJH2G,EIlJO,CAC1CvD,SACA8C,WJgJuB,yCAAuB,WACxDrG,EACAI,GAFwD,sBAAAC,EAAA,sEAKtDL,EAAS,CACP/E,KAAM/D,IAN8C,EAWlDkJ,IADWzD,EAVuC,EAUpDD,UAAaC,SAGT2D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAhBgB,SAoBhDC,KAAMwG,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQxG,GApBT,OAsBtDN,EAAS,CACP/E,KAAM9D,IAvB8C,gDA8BtC,kCAJV2J,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVd,EAASD,MAEXC,EAAS,CACP/E,KAAM7D,EACN+D,QAAS2F,IAnC2C,yDAAvB,2DI9BP,UACI,gBAAC/B,GAAA,EAAKoI,MAAN,CAAYC,UAAU,SAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,qBAGA,gBAACtI,GAAA,EAAKO,QAAN,CAAc+D,GAAG,SAAS3D,MAAO6D,EAAQ/D,SAAU,SAACP,GAAD,OAAOmH,EAAUnH,EAAEQ,OAAOC,QAA7E,UACI,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,gCAGR,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,sBAGA,eAACtI,GAAA,EAAKO,QAAN,CACI+D,GAAG,WACHiE,IAAI,IACJ5H,MAAO2G,EACP7G,SAAU,SAACP,GAAD,OAAOqH,EAAWrH,EAAEQ,OAAOC,aAE7C,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,uBAKJ,gBAAC,GAAD,qBACW,eAAC,QAAD,CAAM0B,GAAG,SAAT,qBADX,sBAC+D,yBCnL9E+F,GAAY,SAACpH,EAAI+F,GAAL,gDAAa,WAAOlG,EAAUI,GAAjB,kBAAAC,EAAA,sEACXK,KAAMC,IAAN,wBAA2BR,IADhB,gBAC1BS,EAD0B,EAC1BA,KAERZ,EAAS,CACL/E,KAAMxD,EACN0D,QAAS,CACLK,QAASoF,EAAKmC,IACdxD,KAAMqB,EAAKrB,KACX2D,MAAOtC,EAAKsC,MACZO,MAAO7C,EAAK6C,MACZkD,aAAc/F,EAAM+F,aACpBT,SAIRpI,aAAa0J,QAAQ,YAAaxJ,KAAKyJ,UAAUrH,IAAWpE,KAAKC,YAf/B,2CAAb,yDC8EVyL,GAhFI,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAC7BsI,EAAYtB,EAAMC,OAAOzF,GAEzB+F,EAAMyB,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAEhE9H,EAAWiB,cAGThF,EADKiF,aAAY,SAAApG,GAAK,OAAIA,EAAMkB,QAChCC,UAER6I,qBAAU,WACHmC,GACCjH,EAASuH,GAAUN,EAAWf,MAEnC,CAAClG,EAAUiH,EAAWf,IACzB6B,QAAQC,IAAI9B,GAEZ,IAAM+B,EAAwB,SAAC9H,GAC3BH,EDEsB,SAACG,GAAD,OAAQ,SAACH,EAAUI,GAC7CJ,EAAS,CACL/E,KAAMvD,EACNyD,QAASgF,IAGbrC,aAAa0J,QAAQ,YAAaxJ,KAAKyJ,UAAUrH,IAAWpE,KAAKC,aCRpDiM,CAAe/H,KAO5B,OACI,gBAACmC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,gDACsB,IAArB7J,EAAU4K,OAAe,gBAAC,GAAD,iCAA4B,eAAC,QAAD,CAAMrF,GAAG,IAAT,wBAClD,eAACkF,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,SACK7D,EAAUM,KAAI,SAAAJ,GAAI,OACf,eAACuK,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CAAOhC,IAAK9G,EAAK+G,MAAOgC,IAAK/I,EAAKoD,KAAM4F,OAAK,EAACgD,SAAO,MAEzD,eAAC5F,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAAC,QAAD,CAAMtE,GAAE,mBAAcrF,EAAKX,SAA3B,SAAuCW,EAAKoD,SAEhD,gBAACgD,GAAA,EAAD,CAAKuD,GAAI,EAAT,cACM3J,EAAKsH,SAEX,eAAClB,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAAC/G,GAAA,EAAKO,QAAN,CAAc+D,GAAG,SAAS3D,MAAOvD,EAAK+J,IAAK1G,SAAU,SAACP,GAAD,OAAOe,EAASuH,GAAUpL,EAAKX,QAASqM,OAAO5I,EAAEQ,OAAOC,UAA7G,SACK,YAAI6E,MAAMpI,EAAKwK,cAAcnC,QAAQjI,KAAI,SAACD,GAAD,OACtC,yBAAoBoD,MAAOpD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UAM7B,eAACiG,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACjG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,QAAQqC,QAAS,kBAAM8F,EAAsB9L,EAAKX,UAAhF,SAA0F,oBAAGoE,UAAU,yBArB9FzD,EAAKX,iBA6B1C,eAAC+G,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAAChD,GAAA,EAAD,UACI,gBAAC4D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,gBAAC4G,GAAA,EAAUxE,KAAX,WACI,6CAAejG,EAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK+J,MAAK,GAA/D,aADJ,IAEMjK,EAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK+J,IAAM/J,EAAKsH,QAAO,GAAG6E,QAAQ,MAE9E,eAAC5B,GAAA,EAAUxE,KAAX,UACI,eAACrC,GAAA,EAAD,CAAQ5E,KAAK,SAAS2E,UAAU,YAAYgH,SAA+B,IAArB3K,EAAU4K,OAAc1E,QAhD9E,WACpBxD,EAAQS,KAAK,6BA+CO,8CC5DbmJ,GAbO,SAAC,GAAkB,IAAhB5E,EAAe,EAAfA,SACrB,OACI,eAACpC,GAAA,EAAD,UACI,eAACe,GAAA,EAAD,CAAK1C,UAAU,4BAAf,SACI,eAAC2C,GAAA,EAAD,CAAKiG,GAAI,GAAI1C,GAAI,EAAjB,SACKnC,SCgEN8E,GA/DK,SAAC,GAA2B,IAAzBd,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAAc,EACjBC,mBAAS,IADQ,oBACpC8J,EADoC,KAC7BC,EAD6B,OAEX/J,mBAAS,IAFE,oBAEpCgK,EAFoC,KAE1BC,EAF0B,KAIrC7I,EAAWiB,cAEXvE,EAAYwE,aAAY,SAAApG,GAAK,OAAIA,EAAM4B,aACrCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBmM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEhD,qBAAU,WACHnI,GACCgC,EAAQS,KAAK0J,KAElB,CAACnK,EAAShC,EAAUmM,IAKvB,OACI,gBAAC,GAAD,WACI,0CACCxN,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SATQ,SAACC,GACnBA,EAAEC,iBACFc,EhBEa,SAAC0I,EAAOE,GAAR,gDAAqB,WAAO5I,GAAP,oBAAAK,EAAA,sEAElCL,EAAS,CACL/E,KAAMpD,IAGJyI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAMwG,KACzB,mBACA,CAAEwB,QAAOE,YACTtI,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRZ,EAAS,CACL/E,KAAMnD,EACNqD,QAASyF,IAGb9C,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAU7G,IAvBd,kDAyBlCZ,EAAS,CACL/E,KAAMlD,EACNoD,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BkB,0DAArB,sDgBFJiI,CAAML,EAAOE,KAOlB,UACI,gBAAC7J,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,WACL0E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAK9C,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,wBAKJ,eAACwC,GAAA,EAAD,CAAK1C,UAAU,OAAf,SACI,gBAAC2C,GAAA,EAAD,4BACkB,eAAC,QAAD,CAAMf,GAAIsH,EAAQ,6BAAyBA,GAAa,YAAxD,+BCyCnBE,GA/FQ,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAAc,EACtBC,mBAAS,IADa,oBACvCW,EADuC,KACjC0J,EADiC,OAEpBrK,mBAAS,IAFW,oBAEvC8J,EAFuC,KAEhCC,EAFgC,OAGd/J,mBAAS,IAHK,oBAGvCgK,EAHuC,KAG7BC,EAH6B,OAIAjK,mBAAS,IAJT,oBAIvCsK,EAJuC,KAItBC,EAJsB,OAKhBvK,mBAAS,MALO,oBAKvCkC,EALuC,KAK9BsI,EAL8B,KAOxCpJ,EAAWiB,cAEXrE,EAAesE,aAAY,SAAApG,GAAK,OAAIA,EAAM8B,gBACxC1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBmM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEhD,qBAAU,WACHnI,GACCgC,EAAQS,KAAK0J,KAElB,CAACnK,EAAShC,EAAUmM,IAUvB,OACI,gBAAC,GAAD,WACI,0CACChI,GAAW,eAAC,GAAD,CAAShB,QAAQ,SAAjB,SAA2BgB,IACtCxF,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SAdQ,SAACC,GACnBA,EAAEC,iBACC0J,IAAaM,EACZE,EAAW,0BAEXpJ,EjBqCY,SAACT,EAAMmJ,EAAOE,GAAd,gDAA2B,WAAO5I,GAAP,oBAAAK,EAAA,sEAE3CL,EAAS,CACL/E,KAAMhD,IAGJqI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAMwG,KACzB,aACA,CAAE3H,OAAMmJ,QAAOE,YACftI,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRZ,EAAS,CACL/E,KAAM/C,EACNiD,QAASyF,IAGbZ,EAAS,CACL/E,KAAMnD,EACNqD,QAASyF,IAGb9C,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAU7G,IA5BL,kDA8B3CZ,EAAS,CACL/E,KAAM9C,EACNgD,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlC2B,0DAA3B,sDiBrCHuI,CAAS9J,EAAMmJ,EAAOE,KAS/B,UAEA,gBAAC7J,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACQ,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAK3C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,WACL0E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAK9C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,+BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,WACL0E,YAAY,mBACZD,MAAOwJ,EACP1J,SAAU,SAACP,GAAD,OAAOkK,EAAmBlK,EAAEQ,OAAOC,aAKrD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,yBAKJ,eAACwC,GAAA,EAAD,CAAK1C,UAAU,OAAf,SACI,gBAAC2C,GAAA,EAAD,+BACqB,eAAC,QAAD,CAAMf,GAAIsH,EAAQ,0BAAsBA,GAAa,SAArD,4B,UC0EtBQ,GA/JO,SAAC,GAA0B,EAAxB3B,SAAyB,IAAfhJ,EAAc,EAAdA,QAAc,EACvBC,mBAAS,IADc,oBACxCW,EADwC,KAClC0J,EADkC,OAErBrK,mBAAS,IAFY,oBAExC8J,EAFwC,KAEjCC,EAFiC,OAGf/J,mBAAS,IAHM,oBAGxCgK,EAHwC,KAG9BC,EAH8B,OAIDjK,mBAAS,IAJR,oBAIxCsK,EAJwC,KAIvBC,EAJuB,OAKjBvK,mBAAS,MALQ,oBAKxCkC,EALwC,KAK/BsI,EAL+B,KAOzCpJ,EAAWiB,cAEXpE,EAAcqE,aAAY,SAACpG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADUuE,aAAY,SAACpG,GAAD,OAAWA,EAAM4B,aACvCC,SAGAhB,EADkBuF,aAAY,SAACpG,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF+B,EAAcwD,aAAY,SAACpG,GAAD,OAAWA,EAAM4C,eAChC6L,EAA8C7L,EAAvDxC,QAA+BsO,EAAwB9L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpDmH,qBAAU,WACHnI,EAGEG,GAASA,EAAKyC,OAAQ5D,GAKzBsN,EAAQnM,EAAKyC,MACboJ,EAAS7L,EAAK4L,SALd1I,EAAS,CAAE/E,K1BnBsB,8B0BoBjC+E,EAASE,GAAe,YACxBF,EC+GoB,yCAAM,WAC9BA,EACAI,GAF8B,wBAAAC,EAAA,sEAK1BL,EAAS,CACL/E,KAAMjB,KANgB,EASUoG,IAAfzD,EATK,EASlBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY7D,EAAS8D,SAbhB,SAiBHC,KAAMC,IAAI,uBAAwBL,GAjB/B,gBAiBlBM,EAjBkB,EAiBlBA,KAERZ,EAAS,CACL/E,KAAMhB,GACNkB,QAASyF,IArBa,kDAyB1BZ,EAAS,CACL/E,KAAMf,GACNiB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BU,0DAAN,0DDpHtBnC,EAAQS,KAAK,YAWd,CAACY,EAAUrB,EAAShC,EAAUG,EAAMnB,IAWvC,OACE,gBAAC2G,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,+CACChF,GAAW,eAAC,GAAD,CAAShB,QAAQ,SAAjB,SAA2BgB,IAEtCnF,GAAW,eAAC,GAAD,CAASmE,QAAQ,UAAjB,6BACX5E,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACyD,GAAA,EAAD,CAAMC,SArBQ,SAACC,GACrBA,EAAEC,iBACE0J,IAAaM,EACfE,EAAW,0BAEXpJ,ElB2F2B,SAAClD,GAAD,gDAAU,WAAOkD,EAAUI,GAAjB,wBAAAC,EAAA,sEAEnCL,EAAS,CACL/E,KAAMzC,IAHyB,EAMC4H,IAAfzD,EANc,EAM3BD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAXP,SAeZC,KAAM+I,IAAN,qBAAgC3M,EAAMwD,GAf1B,gBAe3BM,EAf2B,EAe3BA,KAERZ,EAAS,CACL/E,KAAMxC,EACN0C,QAASyF,IAnBsB,kDAuBnCZ,EAAS,CACL/E,KAAMvC,EACNyC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BmB,0DAAV,wDkB3FlB4I,CAAkB,CAAEvJ,GAAIrD,EAAKiG,IAAKxD,OAAMmJ,QAAOE,eAgBpD,UACE,gBAAC7J,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAItC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAIvC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,kBAAtB,UACE,eAACrI,GAAA,EAAKsI,MAAN,+BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,mBACZD,MAAOwJ,EACP1J,SAAU,SAACP,GAAD,OAAOkK,EAAmBlK,EAAEQ,OAAOC,aAIjD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,0BAMN,gBAACyC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,4CACCyD,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS1J,QAAQ,SAAjB,SAA2B0J,IAE3B,gBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACGjC,EAAOpB,KAAI,SAACc,GAAD,OACV,gCACE,8BAAKA,EAAM0F,MACX,8BAAK1F,EAAM0J,UAAUC,UAAU,EAAG,MAClC,8BAAK3J,EAAM2M,aACX,8BACG3M,EAAM4M,OACL5M,EAAM6M,OAAOlD,UAAU,EAAG,IAE1B,oBAAGpH,UAAU,eAAe+C,MAAO,CAAED,MAAO,WAGhD,8BACGrF,EAAM8M,YACL9M,EAAM+M,YAAYpD,UAAU,EAAG,IAE/B,oBAAGpH,UAAU,eAAe+C,MAAO,CAAED,MAAO,WAGhD,8BACE,eAAC,iBAAD,CAAelB,GAAE,iBAAYnE,EAAM0F,KAAnC,SACE,eAAClD,GAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,QAAnC,2BApBGzC,EAAM0F,oBE3FhBsH,GAvCO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1C,OACI,gBAAC3I,GAAA,EAAD,CAAKlC,UAAU,8BAAf,UACI,eAACkC,GAAA,EAAII,KAAL,UACKoI,EACG,eAAC,iBAAD,CAAe9I,GAAG,SAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,wBAEJ,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,uBAGR,eAAC9E,GAAA,EAAII,KAAL,UACKqI,EACG,eAAC,iBAAD,CAAe/I,GAAG,YAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,yBAEJ,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,wBAGR,eAAC9E,GAAA,EAAII,KAAL,UACKsI,EACG,eAAC,iBAAD,CAAehJ,GAAG,WAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,wBAEJ,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,uBAGR,eAAC9E,GAAA,EAAII,KAAL,UACKuI,EACG,eAAC,iBAAD,CAAejJ,GAAG,cAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,4BAEJ,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,+BCiDL8D,GA9EQ,SAAC,GAAiB,IAAf/L,EAAc,EAAdA,QAEdzC,EADKgF,aAAY,SAAApG,GAAK,OAAIA,EAAMkB,QAChCE,gBAF4B,EAIN0C,mBAAS1C,EAAgByO,SAJnB,oBAI7BA,EAJ6B,KAIpBC,EAJoB,OAKZhM,mBAAS1C,EAAgB2O,MALb,oBAK7BA,EAL6B,KAKvBC,EALuB,OAMAlM,mBAAS1C,EAAgB6O,YANzB,oBAM7BA,EAN6B,KAMjBC,EANiB,OAONpM,mBAAS1C,EAAgB+O,SAPnB,oBAO7BA,EAP6B,KAOpBC,EAPoB,KAS9BlL,EAAWiB,cAOjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeqJ,OAAK,EAACC,OAAK,IAC1B,2CACA,gBAACxL,GAAA,EAAD,CAAMC,SATQ,SAACC,GRkBQ,IAAC2B,EQjB5B3B,EAAEC,iBACFc,GRgB4BY,EQhBC,CAAE+J,UAASE,OAAME,aAAYE,WRgBrB,SAACjL,GAC1CA,EAAS,CACL/E,KAAMtD,EACNwD,QAASyF,IAGb9C,aAAa0J,QAAQ,kBAAmBxJ,KAAKyJ,UAAU7G,OQrBnDjC,EAAQS,KAAK,aAMT,UACI,gBAACL,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,sBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,gBACZD,MAAOiL,EACPQ,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO2L,EAAW3L,EAAEQ,OAAOC,aAK7C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,aACZD,MAAOmL,EACPM,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO6L,EAAQ7L,EAAEQ,OAAOC,aAK1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,aAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,0BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,mBACZD,MAAOqL,EACPI,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO+L,EAAc/L,EAAEQ,OAAOC,aAKhD,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,sBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,gBACZD,MAAOuL,EACPE,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAOiM,EAAWjM,EAAEQ,OAAOC,aAK7C,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,6BCfDsL,GAtDO,SAAC,GAAiB,IAAfzM,EAAc,EAAdA,QACRuC,aAAY,SAAApG,GAAK,OAAIA,EAAMkB,QAChCE,iBAGJyC,EAAQS,KAAK,aALkB,MAQOR,mBAAS,UARhB,oBAQ5BnC,EAR4B,KAQb4O,EARa,KAU7BrL,EAAWiB,cAOjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeqJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,iDACA,gBAACzL,GAAA,EAAD,CAAMC,SATQ,SAACC,GTyBM,IAAC2B,ESxB1B3B,EAAEC,iBACFc,GTuB0BY,ESvBCnE,ETuBQ,SAACuD,GACxCA,EAAS,CACL/E,KAAMrD,EACNuD,QAASyF,IAGb9C,aAAa0J,QAAQ,gBAAiBxJ,KAAKyJ,UAAU7G,OS5BjDjC,EAAQS,KAAK,gBAMT,UACI,gBAACL,GAAA,EAAKoI,MAAN,WACI,eAACpI,GAAA,EAAKsI,MAAN,CAAYhE,GAAG,SAAf,2BAEJ,eAACd,GAAA,EAAD,UACI,eAACxD,GAAA,EAAKuM,MAAN,CACIrQ,KAAK,QACLsQ,MAAM,wBACNpL,GAAG,SACHZ,KAAK,gBACLG,MAAM,SACN8L,SAAO,EAAChM,SAAU,SAACP,GAAD,OAAOoM,EAAiBpM,EAAEQ,OAAOC,eAa3D,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,6BC8FD2L,GA1IU,SAAC,GAAiB,IAAf9M,EAAc,EAAdA,QAElBqB,EAAWiB,cAEXjF,EAAOkF,aAAY,SAAApG,GAAK,OAAIA,EAAMkB,QAGlC0P,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAEjDtM,EAAK8P,WAAaJ,EAAY1P,EAAKC,UAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKsH,MAAQtH,EAAK+J,MAAK,IAEhGlK,EAAK+P,cAAgBL,EAAY1P,EAAK8P,WAAa,IAAM,EAAI,KAE7D9P,EAAKgQ,SAAWN,EAAY7D,QAAQ,IAAO7L,EAAK8P,YAAYxD,QAAQ,KACpEtM,EAAKgO,YACDnC,OAAO7L,EAAK8P,YACZjE,OAAO7L,EAAK+P,eACZlE,OAAO7L,EAAKgQ,WACV1D,QAAQ,GAEd,IAAMlL,EAAc8D,aAAY,SAAApG,GAAK,OAAIA,EAAMsC,eACvCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBwJ,qBAAU,WACHnJ,GACCgD,EAAQS,KAAR,iBAAuB/B,EAAM0F,QAGlC,CAACpE,EAAShD,IAcb,OACI,uCACI,eAAC,GAAD,CAAe2O,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACnI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,gBAAC4G,GAAA,EAAUxE,KAAX,WACI,2CACA,+BACI,+CACClG,EAAKE,gBAAgByO,QAF1B,IAGK3O,EAAKE,gBAAgB2O,KAH1B,IAIK7O,EAAKE,gBAAgB6O,WAJ1B,IAKK/O,EAAKE,gBAAgB+O,cAG9B,gBAACvE,GAAA,EAAUxE,KAAX,WACI,iDACA,+CACClG,EAAKS,iBAEV,gBAACiK,GAAA,EAAUxE,KAAX,WACI,8CAC2B,IAA1BlG,EAAKC,UAAU4K,OAAe,eAAC,GAAD,iCAC3B,eAACH,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,SACK9D,EAAKC,UAAUM,KAAI,SAACJ,EAAM8P,GAAP,OAChB,eAACvF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CAAOhC,IAAK9G,EAAK+G,MAAOgC,IAAK/I,EAAKoD,KAClC4F,OAAK,EAACgD,SAAO,MAEjB,eAAC5F,GAAA,EAAD,UACI,eAAC,QAAD,CAAMf,GAAE,mBAAcrF,EAAKX,SAA3B,SACKW,EAAKoD,SAGd,gBAACgD,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACK3J,EAAK+J,IADV,MACkB/J,EAAKsH,MADvB,OACkCtH,EAAK+J,IAAM/J,EAAKsH,aAZrCwI,gBAsB7C,eAAC1J,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAAChD,GAAA,EAAD,UACI,gBAAC4D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAUxE,KAAX,UACI,kDAEJ,eAACwE,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAK8P,mBAGpB,eAACpF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAK+P,sBAGpB,eAACrF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAKgQ,iBAGpB,eAACtF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAKgO,mBAGpB,eAACtD,GAAA,EAAUxE,KAAX,UACK5G,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,MAEzC,eAACoL,GAAA,EAAUxE,KAAX,UACI,eAACrC,GAAA,EAAD,CAAQ5E,KAAK,SAAS2E,UAAU,YAAYgH,SAA6B,IAAnB5K,EAAKC,UAAiBkG,QA9F9E,WACtBnC,EJjBmB,SAAC3C,GAAD,gDAAW,WAAO2C,EAAUI,GAAjB,wBAAAC,EAAA,sEAE9BL,EAAS,CACL/E,KAAM3B,KAHoB,EAMM8G,IAAfzD,EANS,EAMtBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAXZ,SAePC,KAAMwG,KAAN,cAA0B7J,EAAOiD,GAf1B,gBAetBM,EAfsB,EAetBA,KAERZ,EAAS,CACL/E,KAAM1B,GACN4B,QAASyF,IAnBiB,kDAuB9BZ,EAAS,CACL/E,KAAMzB,GACN2B,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3Bc,0DAAX,wDIiBVoL,CAAY,CACjBC,WAAYnQ,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBqP,WAAY9P,EAAK8P,WACjBC,cAAe/P,EAAK+P,cACpBC,SAAUhQ,EAAKgQ,SACfhC,WAAYhO,EAAKgO,eAsFG,yC,SCoEjBoC,GA9LK,SAAC,GAAwB,IAqBhBT,EArBNhG,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QACpB0N,EAAU1G,EAAMC,OAAOzF,GADW,EAGRvB,oBAAS,GAHD,oBAGjC0N,EAHiC,KAGvBC,EAHuB,KAKlCvM,EAAWiB,cAEX3D,EAAe4D,aAAY,SAAApG,GAAK,OAAIA,EAAMwC,gBACxCD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAGhBqB,EADUuE,aAAY,SAAApG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFa,EAAW0D,aAAY,SAAApG,GAAK,OAAIA,EAAM0C,YAC3BgP,EAAoChP,EAA7CtC,QAA8BuR,EAAejP,EAAxB7B,QAEvB8B,EAAeyD,aAAY,SAAApG,GAAK,OAAIA,EAAM2C,gBAC/BiP,EAA4CjP,EAArDvC,QAAkCyR,EAAmBlP,EAA5B9B,QAEjC,IAAIT,EAAS,CAKTmC,EAAMyO,YAHeH,EAIjBtO,EAAME,WAAW6K,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKsH,MAAQtH,EAAK+J,MAAK,IAH5D0F,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAOrDxD,qBAAU,WACFnI,GACAgC,EAAQS,KAAK,UAEjB,ILWwBe,EKXlByM,EAAe,yCAAG,iCAAAvM,EAAA,sEACaK,KAAMC,IAAI,sBADvB,gBACNkM,EADM,EACZjM,MACFkM,EAASC,SAASC,cAAc,WAC/B/R,KAAO,kBACd6R,EAAO7J,IAAP,kDAAwD4J,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GATN,4CAAH,sDAYjBzP,GAASoP,GAAcE,GACvB3M,EAAS,CAAE/E,KAAMlB,KACjBiG,EAAS,CAAE/E,KAAMP,KACjBsF,GLJoBG,EKIKkM,ELJN,yCAAQ,WAAOrM,EAAUI,GAAjB,wBAAAC,EAAA,sEAE/BL,EAAS,CACL/E,KAAMxB,KAHqB,EAMK2G,IAAfzD,EANU,EAMvBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY7D,EAAS8D,SAVX,SAcRC,KAAMC,IAAN,sBAAyBR,GAAMG,GAdvB,gBAcvBM,EAduB,EAcvBA,KAERZ,EAAS,CACL/E,KAAMvB,GACNyB,QAASyF,IAlBkB,kDAsB/BZ,EAAS,CACL/E,KAAMtB,GACNwB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1Be,0DAAR,2DKKXzD,EAAM4M,SACToD,OAAOC,OAGRf,GAAY,GAFZK,OAKT,CAACvP,EAAOgP,EAASI,EAAYE,EAAgBtP,IAWhD,OAAOnC,EACH,eAAC,GAAD,IACAI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAEnC,uCACA,yCAAW+B,EAAM0F,OACjB,gBAACT,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,gBAAC4G,GAAA,EAAUxE,KAAX,WACI,2CACA,+BACI,6CADJ,IAC6B7E,EAAMP,KAAKyC,QAExC,+BACI,8CADJ,IAC8B,IAC1B,oBAAGgO,KAAI,iBAAYlQ,EAAMP,KAAK4L,OAA9B,SAAwCrL,EAAMP,KAAK4L,WAEvD,+BACI,+CACCrL,EAAMnB,gBAAgByO,QAF3B,IAGKtN,EAAMnB,gBAAgB2O,KAH3B,IAIKxN,EAAMnB,gBAAgB6O,WAJ3B,IAKK1N,EAAMnB,gBAAgB+O,WAE1B5N,EAAM8M,YACH,gBAAC,GAAD,CAASrK,QAAQ,UAAjB,0BAAyCzC,EAAM+M,eAE3C,eAAC,GAAD,CAAStK,QAAQ,SAAjB,8BAGZ,gBAAC4G,GAAA,EAAUxE,KAAX,WACI,iDACA,+BACI,+CACC7E,EAAMZ,iBAEVY,EAAM4M,OACH,gBAAC,GAAD,CAASnK,QAAQ,UAAjB,qBAAoCzC,EAAM6M,UAEtC,eAAC,GAAD,CAASpK,QAAQ,SAAjB,yBAGZ,gBAAC4G,GAAA,EAAUxE,KAAX,WACI,8CAC6B,IAA5B7E,EAAME,WAAWsJ,OAAe,eAAC,GAAD,6BAC7B,eAACH,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,SACKzC,EAAME,WAAWhB,KAAI,SAACJ,EAAM8P,GAAP,OAClB,eAACvF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CAAOhC,IAAK9G,EAAK+G,MAAOgC,IAAK/I,EAAKoD,KAClC4F,OAAK,EAACgD,SAAO,MAEjB,eAAC5F,GAAA,EAAD,UACI,eAAC,QAAD,CAAMf,GAAE,mBAAcrF,EAAKX,SAA3B,SACKW,EAAKoD,SAGd,gBAACgD,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACKzI,EAAM6I,IADX,MACmB7I,EAAMoG,MADzB,OACoCpG,EAAM6I,IAAM7I,EAAMoG,aAZzCwI,gBAsB7C,eAAC1J,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAAChD,GAAA,EAAD,UACI,gBAAC4D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAUxE,KAAX,UACI,kDAEJ,eAACwE,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOlF,EAAMyO,mBAGrB,eAACpF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOlF,EAAM0O,sBAGrB,eAACrF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOlF,EAAM2O,iBAGrB,eAACtF,GAAA,EAAUxE,KAAX,UACI,gBAACI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOlF,EAAM2M,oBAGnB3M,EAAM4M,QACJ,gBAACvD,GAAA,EAAUxE,KAAX,WACKsK,GAAc,eAAC,GAAD,IACbF,EACE,eAAC,gBAAD,CAAckB,OAAQnQ,EAAM2M,WAAYyD,UAjH1C,SAACC,GAC3B3F,QAAQC,IAAI0F,GACZ1N,ELegB,SAACqM,EAASqB,GAAV,gDAA4B,WAAO1N,EAAUI,GAAjB,wBAAAC,EAAA,sEAE5CL,EAAS,CACL/E,KAAMrB,KAHkC,EAMRwG,IAAfzD,EANuB,EAMpCD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAXE,SAerBC,KAAM+I,IAAN,sBAAyB4C,EAAzB,QAAwCqB,EAAepN,GAflC,gBAepCM,EAfoC,EAepCA,KAERZ,EAAS,CACL/E,KAAMpB,GACNsB,QAASyF,IAnB+B,kDAuB5CZ,EAAS,CACL/E,KAAMnB,GACNqB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3B4B,0DAA5B,wDKfP6M,CAAStB,EAASqB,OA8GU,eAAC,GAAD,OAKpBhB,GAAkB,eAAC,GAAD,IAClB/P,GAAYA,EAASyF,SAAW/E,EAAM4M,SAAW5M,EAAM8M,aACpD,eAACzD,GAAA,EAAUxE,KAAX,UACI,eAACrC,GAAA,EAAD,CAAQ5E,KAAK,SAAS2E,UAAU,gBAAgBuC,QAnHrD,WACnBnC,EL2CoB,SAAC3C,GAAD,gDAAW,WAAO2C,EAAUI,GAAjB,wBAAAC,EAAA,sEAE/BL,EAAS,CACL/E,KAAMV,KAHqB,EAMK6F,IAAfzD,EANU,EAMvBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY7D,EAAS8D,SAVX,SAcRC,KAAM+I,IAAN,sBAAyBpM,EAAM0F,IAA/B,YAA8C,GAAIzC,GAd1C,gBAcvBM,EAduB,EAcvBA,KAERZ,EAAS,CACL/E,KAAMT,GACNW,QAASyF,IAlBkB,kDAsB/BZ,EAAS,CACL/E,KAAMR,GACNU,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1Be,0DAAX,wDK3CX8M,CAAavQ,KAkHE,+CClGjBwQ,GAnFQ,SAAC,GAAiB,IAAflP,EAAc,EAAdA,QAChBqB,EAAWiB,cAEXjE,EAAWkE,aAAY,SAAApG,GAAK,OAAIA,EAAMkC,YACpC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUuE,aAAY,SAAApG,GAAK,OAAIA,EAAM4B,aACrCC,SAGSmR,EADE5M,aAAY,SAAApG,GAAK,OAAIA,EAAMoC,cACtCvB,QAERmJ,qBAAU,WACHnI,GAAYA,EAASyF,QACpBpC,EAASe,MAETpC,EAAQS,KAAK,UAEjBY,EAASe,QACV,CAACf,EAAUrB,EAASmP,EAAenR,IAEtC,IAAMoR,EAAgB,SAAC5N,GAClBkN,OAAOW,QAAQ,iBAChBhO,EzB8KkB,SAACG,GAAD,gDAAQ,WAAOH,EAAUI,GAAjB,oBAAAC,EAAA,sEAE1BL,EAAS,CACL/E,KAAMlC,KAHgB,EAMUqH,IAAfzD,EANK,EAMlBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY7D,EAAS8D,SAVhB,SAcpBC,KAAMuN,OAAN,qBAA2B9N,GAAMG,GAdb,OAgB1BN,EAAS,CACL/E,KAAMjC,KAjBgB,gDAqB1BgH,EAAS,CACL/E,KAAMhC,GACNkC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBU,yDAAR,wDyB9KToN,CAAW/N,KAIxB,OACI,uCACE,wCACCjF,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACqO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,wCACA,6BAGJ,iCACG3C,EAAMV,KAAI,SAACO,GAAD,OACT,gCACE,8BAAKA,EAAKiG,MACV,8BAAKjG,EAAKyC,OACV,8BACE,oBAAGgO,KAAI,iBAAYzQ,EAAK4L,OAAxB,SAAkC5L,EAAK4L,UAEzC,8BACG5L,EAAKsF,QACJ,oBAAGxC,UAAU,eAAe+C,MAAO,CAAED,MAAO,WAE5C,oBAAG9C,UAAU,eAAe+C,MAAO,CAAED,MAAO,WAGhD,gCACE,eAAC,iBAAD,CAAelB,GAAE,sBAAiB1E,EAAKiG,IAAtB,SAAjB,SACE,eAAClD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAACC,GAAA,EAAD,CACEC,QAAQ,SACRF,UAAU,SACVuC,QAAS,kBAAM4L,EAAcjR,EAAKiG,MAHpC,SAKE,oBAAGnD,UAAU,wBAxBV9C,EAAKiG,iBC8CjBoL,GA3FQ,SAAC,GAAwB,IAAtBxI,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QACvByP,EAASzI,EAAMC,OAAOzF,GADe,EAGnBvB,mBAAS,IAHU,oBAGpCW,EAHoC,KAG9B0J,EAH8B,OAIjBrK,mBAAS,IAJQ,oBAIpC8J,EAJoC,KAI7BC,EAJ6B,OAKb/J,oBAAS,GALI,oBAKpCwD,EALoC,KAK3BiM,EAL2B,KAOrCrO,EAAWiB,cAEXpE,EAAcqE,aAAY,SAAApG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAElBK,EAAa+D,aAAY,SAAApG,GAAK,OAAIA,EAAMqC,cAC7BmR,EAA8DnR,EAAvEjC,QAA+BqT,EAAwCpR,EAA/C7B,MAA6BkT,EAAkBrR,EAA3BxB,QAGpDmJ,qBAAU,WACH0J,GACCxO,EAAS,CAAE/E,KAAM5B,KACjBsF,EAAQS,KAAK,oBAETtC,EAAKyC,MAAQzC,EAAKiG,MAAQqL,GAG1BnF,EAAQnM,EAAKyC,MACboJ,EAAS7L,EAAK4L,OACd2F,EAAWvR,EAAKsF,UAJhBpC,EAASE,GAAekO,MAOjC,CAACpO,EAAUrB,EAASyP,EAAQtR,EAAM0R,IAMrC,OACI,uCACI,eAAC,QAAD,CAAMhN,GAAG,kBAAkB5B,UAAU,qBAArC,qBAGA,gBAAC,GAAD,WACA,4CACC0O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASzO,QAAQ,SAAjB,SAA2ByO,IAC1CrT,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACvD,gBAACyD,GAAA,EAAD,CAAMC,SAdI,SAACC,GACnBA,EAAEC,iBACFc,E1BgMkB,SAAClD,GAAD,gDAAU,WAAOkD,EAAUI,GAAjB,wBAAAC,EAAA,sEAE5BL,EAAS,CACL/E,KAAM/B,KAHkB,EAMQkH,IAAfzD,EANO,EAMpBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAXd,SAeLC,KAAM+I,IAAN,qBAAwB3M,EAAKiG,KAAOjG,EAAMwD,GAfrC,gBAepBM,EAfoB,EAepBA,KAERZ,EAAS,CAAE/E,KAAM9B,KACjB6G,EAAS,CAAE/E,KAAM5C,EAAsB8C,QAASyF,IAlBpB,kDAqB5BZ,EAAS,CACL/E,KAAM7B,GACN+B,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBY,0DAAV,wD0BhMT2N,CAAW,CAAE1L,IAAKqL,EAAQ7O,OAAMmJ,QAAOtG,cAYxC,UAEA,gBAACrD,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACQ,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAK3C,eAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,SACI,eAACrI,GAAA,EAAKuM,MAAN,CACIrQ,KAAK,WACLsQ,MAAM,WACNC,QAASpJ,EACT5C,SAAU,SAACP,GAAD,OAAOoP,EAAWpP,EAAEQ,OAAO+L,cAK7C,eAAC3L,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,8BCoDL4O,GAlIW,SAAC,GAAwB,IAAtB/P,EAAqB,EAArBA,QACrBgG,EAD0C,EAAZgB,MACXC,OAAOjB,YAAc,EAEtC3E,EAAWiB,cAEXpG,EAAcqG,aAAY,SAAApG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAElCM,EAAgBwF,aAAY,SAAApG,GAAK,OAAIA,EAAMY,iBAEtCiT,EAGPjT,EAHFR,QACO0T,EAELlT,EAFFJ,MACSwS,EACPpS,EADFC,QAGIC,EAAgBsF,aAAY,SAAApG,GAAK,OAAIA,EAAMc,iBAEtCiT,EAIPjT,EAJFV,QACO4T,EAGLlT,EAHFN,MACSyT,EAEPnT,EAFFD,QACSqT,EACPpT,EADFJ,QAIMmB,EADUuE,aAAY,SAAApG,GAAK,OAAIA,EAAM4B,aACrCC,SAERmI,qBAAU,WACR9E,EAAS,CAAE/E,KAAMpE,IAEX8F,EAASyF,SACXzD,EAAQS,KAAK,UAEZ2P,EACDpQ,EAAQS,KAAR,yBAA+B4P,EAAejM,IAA9C,UAEA/C,EAAS0E,GAAa,GAAIC,MAE7B,CACC3E,EACArB,EACAhC,EACAmR,EACAiB,EACAC,EACArK,IAGJ,IAAMoJ,EAAgB,SAAC5N,GAClBkN,OAAOW,QAAQ,iBAChBhO,EnBaqB,SAACG,GAAD,gDAAQ,WAAOH,EAAUI,GAAjB,sBAAAC,EAAA,sEAEjCL,EAAS,CACP/E,KAAM1E,IAHyB,EAQ7B6J,IADWzD,EAPkB,EAO/BD,UAAaC,SAGT2D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY7D,EAAS8D,SAZL,SAgB3BC,KAAMuN,OAAN,wBAA8B9N,GAAMG,GAhBT,OAkBjCN,EAAS,CACP/E,KAAMzE,IAnByB,gDA0BjB,kCAJVsK,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVd,EAASD,MAEXC,EAAS,CACP/E,KAAMxE,EACN0E,QAAS2F,IA/BsB,yDAAR,wDmBbZmO,CAAc9O,KAQ3B,OACI,uCACA,gBAACmC,GAAA,EAAD,CAAK1C,UAAU,qBAAf,UACI,eAAC2C,GAAA,EAAD,UACI,6CAEJ,eAACA,GAAA,EAAD,CAAK3C,UAAU,aAAf,SACI,gBAACC,GAAA,EAAD,CAAQD,UAAU,OAAOuC,QAXR,WAC3BnC,EnB4CuB,yCAAM,WAAOA,EAAUI,GAAjB,0BAAAC,EAAA,sEAE/BL,EAAS,CACP/E,KAAMvE,IAHuB,EAQ3B0J,IADWzD,EAPgB,EAO7BD,UAAaC,SAGT2D,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY7D,EAAS8D,SAZP,SAgBRC,KAAMwG,KAAN,gBAA4B,GAAI5G,GAhBxB,gBAgBvBM,EAhBuB,EAgBvBA,KAERZ,EAAS,CACP/E,KAAMtE,EACNwE,QAASyF,IApBoB,kDA2Bf,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVd,EAASD,MAEXC,EAAS,CACP/E,KAAMrE,EACNuE,QAAS2F,IAhCoB,0DAAN,0DmBlCb,UACI,oBAAGlB,UAAU,gBADjB,0BAKP+O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS9O,QAAQ,SAAjB,SAA2B8O,IAE1CC,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAShP,QAAQ,SAAjB,SAA2BgP,IACxC5T,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACA,gBAACqO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,2CACA,wCACA,6BAGJ,iCACG7E,EAASwB,KAAI,SAACf,GAAD,OACZ,gCACE,8BAAKA,EAAQuH,MACb,8BAAKvH,EAAQ+D,OACb,oCACM/D,EAAQiI,SAEd,8BACKjI,EAAQ0T,WAEb,8BACK1T,EAAQ2T,QAEb,gCACE,eAAC,iBAAD,CAAe3N,GAAE,yBAAoBhG,EAAQuH,IAA5B,SAAjB,SACE,eAAClD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAACC,GAAA,EAAD,CACEC,QAAQ,SACRF,UAAU,SACVuC,QAAS,kBAAM4L,EAAcvS,EAAQuH,MAHvC,SAKE,oBAAGnD,UAAU,wBAvBVpE,EAAQuH,aA8BvB,eAAC,GAAD,CAAU3H,MAAOA,EAAOC,KAAMA,EAAM+G,SAAS,WCwD1CgN,GAlLW,SAAC,GAAwB,IAAtBzJ,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QAC1BsI,EAAYtB,EAAMC,OAAOzF,GADe,EAGtBvB,mBAAS,IAHa,oBAGvCW,EAHuC,KAGjC0J,EAHiC,OAIpBrK,mBAAS,GAJW,oBAIvC6E,EAJuC,KAIhC4L,EAJgC,OAKpBzQ,mBAAS,IALW,oBAKvCsE,EALuC,KAKhCoM,EALgC,OAMpB1Q,mBAAS,IANW,oBAMvCuQ,EANuC,KAMhCI,EANgC,OAOd3Q,mBAAS,IAPK,oBAOvCsQ,EAPuC,KAO7BM,EAP6B,OAQN5Q,mBAAS,GARH,oBAQvC+H,EARuC,KAQzB8I,EARyB,OASR7Q,mBAAS,IATD,oBASvC0G,EATuC,KAS1BoK,EAT0B,OAUZ9Q,oBAAS,GAVG,oBAUvC+Q,EAVuC,KAU5BC,EAV4B,KAYxC5P,EAAWiB,cAEX1F,EAAiB2F,aAAY,SAAApG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,EAAgBqF,aAAY,SAAApG,GAAK,OAAIA,EAAMe,iBAChCyS,EAA8DzS,EAAvEX,QAA+BqT,EAAwC1S,EAA/CP,MAA6BkT,EAAkB3S,EAA3BF,QAEpDmJ,qBAAU,WACH0J,GACCxO,EAAS,CAAE/E,KAAMhE,IACjB0H,EAAQS,KAAK,uBAET5D,EAAQ+D,MAAQ/D,EAAQuH,MAAQkE,GAGhCgC,EAAQzN,EAAQ+D,MAChB8P,EAAS7T,EAAQiI,OACjB6L,EAAS9T,EAAQ0H,OACjBqM,EAAS/T,EAAQ2T,OACjBK,EAAYhU,EAAQ0T,UACpBO,EAAgBjU,EAAQmL,cACxB+I,EAAelU,EAAQ8J,cARvBtF,EAAS4E,GAAmBqC,MAYrC,CAACjH,EAAUrB,EAASsI,EAAWzL,EAASgT,IAE3C,IAAMqB,EAAiB,yCAAG,WAAO5Q,GAAP,wBAAAoB,EAAA,6DAChByP,EAAO7Q,EAAEQ,OAAOsQ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJS,SAOZtP,EAAS,CACXC,QAAS,CACL,eAAgB,wBATN,SAaKG,KAAMwG,KAAK,cAAe8I,EAAU1P,GAbzC,gBAaVM,EAbU,EAaVA,KAER0O,EAAS1O,GAETgP,GAAa,GAjBK,kDAmBlB7H,QAAQC,IAAR,MACA4H,GAAa,GApBK,0DAAH,sDAqCvB,OACI,uCACI,eAAC,QAAD,CAAMpO,GAAG,qBAAqB5B,UAAU,qBAAxC,qBAGA,gBAAC,GAAD,WACA,+CACC0O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASzO,QAAQ,SAAjB,SAA2ByO,IAC1CrT,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACvD,gBAACyD,GAAA,EAAD,CAAMC,SAvBI,SAACC,GACnBA,EAAEC,iBACFc,EpBoEqB,SAACxE,GAAD,gDAAa,WAAOwE,EAAUI,GAAjB,0BAAAC,EAAA,sEAEtCL,EAAS,CACP/E,KAAMnE,IAH8B,EAQlCsJ,IADWzD,EAPuB,EAOpCD,UAAaC,SAGT2D,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbA,SAiBfC,KAAM+I,IAAN,wBACJjO,EAAQuH,KACzBvH,EACA8E,GApBoC,gBAiB9BM,EAjB8B,EAiB9BA,KAMRZ,EAAS,CACP/E,KAAMlE,EACNoE,QAASyF,IAEXZ,EAAS,CAAE/E,KAAM5E,EAAyB8E,QAASyF,IA3Bb,kDAiCtB,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVd,EAASD,MAEXC,EAAS,CACP/E,KAAMjE,EACNmE,QAAS2F,IAtC2B,0DAAb,wDoBpEZqP,CAAc,CACnBpN,IAAKkE,EACL1H,OACAkE,QACA0L,QACAjM,QACAgM,WACA5J,cACAqB,mBAaI,UAEA,gBAAC5H,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACQ,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,oBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,SACL0E,YAAY,cACZD,MAAO+D,EACPjE,SAAU,SAACP,GAAD,OAAOoQ,EAASpQ,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,oBACI,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,kBACZD,MAAOwD,EACP1D,SAAU,SAACP,GAAD,OAAOqQ,EAASrQ,EAAEQ,OAAOC,UAE3C,eAACX,GAAA,EAAKqR,KAAN,CACIjQ,GAAG,aACHoL,MAAM,cACN8E,QAAM,EAAC7Q,SAAUqQ,EAHrB,SAISF,GAAa,eAAC,GAAD,SAI1B,gBAAC5Q,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,oBACI,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,cACZD,MAAOyP,EACP3P,SAAU,SAACP,GAAD,OAAOsQ,EAAStQ,EAAEQ,OAAOC,aAI/C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,eAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,2BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,SACL0E,YAAY,qBACZD,MAAOiH,EACPnH,SAAU,SAACP,GAAD,OAAOwQ,EAAgBxQ,EAAEQ,OAAOC,aAIlD,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACI,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,iBACZD,MAAOwP,EACP1P,SAAU,SAACP,GAAD,OAAOuQ,EAAYvQ,EAAEQ,OAAOC,aAIlD,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,cAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,0BACI,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,oBACZD,MAAO4F,EACP9F,SAAU,SAACP,GAAD,OAAOyQ,EAAezQ,EAAEQ,OAAOC,aAIrD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,8BCzFLwQ,GA/ES,SAAC,GAAiB,IAAf3R,EAAc,EAAdA,QACjBqB,EAAWiB,cAEXrD,EAAYsD,aAAY,SAAApG,GAAK,OAAIA,EAAM8C,aACrC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADUuE,aAAY,SAAApG,GAAK,OAAIA,EAAM4B,aACrCC,SAUR,OARAmI,qBAAU,WACHnI,GAAYA,EAASyF,QACpBpC,EVoKc,yCAAM,WAC5BA,EACAI,GAF4B,wBAAAC,EAAA,sEAKxBL,EAAS,CACL/E,KAAMb,KANc,EASYgG,IAAfzD,EATG,EAShBD,UAAaC,SAEf2D,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY7D,EAAS8D,SAblB,SAiBDC,KAAMC,IAAI,cAAeL,GAjBxB,gBAiBhBM,EAjBgB,EAiBhBA,KAERZ,EAAS,CACL/E,KAAMZ,GACNc,QAASyF,IArBW,kDAyBxBZ,EAAS,CACL/E,KAAMX,GACNa,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BQ,0DAAN,yDUlKdnC,EAAQS,KAAK,YAElB,CAACY,EAAUrB,EAAShC,IAGnB,uCACE,yCACCzB,EACC,eAAC,GAAD,IACEI,EACF,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACqO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACGjC,EAAOpB,KAAI,SAACc,GAAD,OACV,gCACE,8BAAKA,EAAM0F,MACX,8BAAK1F,EAAMP,MAAQO,EAAMP,KAAKyC,OAC9B,8BACKlC,EAAM0J,UAAUC,UAAU,EAAG,MAElC,oCACM3J,EAAM2M,cAEZ,8BACG3M,EAAM4M,OACL5M,EAAM6M,OAAOqG,SAAS,EAAG,IAEzB,oBAAG3Q,UAAU,eAAe+C,MAAO,CAAED,MAAO,WAGhD,8BACGrF,EAAM8M,YACL9M,EAAM+M,YAAYmG,SAAS,EAAG,IAE9B,oBAAG3Q,UAAU,eAAe+C,MAAO,CAAED,MAAO,WAGhD,8BACE,eAAC,iBAAD,CAAelB,GAAE,iBAAYnE,EAAM0F,KAAnC,SACE,eAAClD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAzBGvC,EAAM0F,iBCOlByN,GAlCH,WACV,OACE,gBAAC,iBAAD,WACE,eAAC,GAAD,IACE,uBAAM5Q,UAAU,OAAhB,SACE,gBAAC2B,GAAA,EAAD,WACE,eAAC,KAAD,CAAOkP,KAAK,SAASC,UAAWjI,KAChC,eAAC,KAAD,CAAOgI,KAAK,aAAaC,UAAWtE,KACpC,eAAC,KAAD,CAAOqE,KAAK,WAAWC,UAAWtF,KAClC,eAAC,KAAD,CAAOqF,KAAK,cAAcC,UAAWjF,KACrC,eAAC,KAAD,CAAOgF,KAAK,YAAYC,UAAWhG,KACnC,eAAC,KAAD,CAAO+F,KAAK,YAAYC,UAAW1H,KACnC,eAAC,KAAD,CAAOyH,KAAK,WAAWC,UAAWpH,KAClC,eAAC,KAAD,CAAOmH,KAAK,eAAeC,UAAWzK,KACtC,eAAC,KAAD,CAAOwK,KAAK,aAAaC,UAAWhJ,KACpC,eAAC,KAAD,CAAO+I,KAAK,kBAAkBC,UAAW7C,KACzC,eAAC,KAAD,CAAO4C,KAAK,uBAAuBC,UAAWvC,KAC9C,eAAC,KAAD,CAAOsC,KAAK,qBAAqBC,UAAWhC,GAAmBiC,OAAK,IACpE,eAAC,KAAD,CACEF,KAAK,iCACLC,UAAWhC,GAAmBiC,OAAK,IACrC,eAAC,KAAD,CAAOF,KAAK,mBAAmBC,UAAWJ,KAC1C,eAAC,KAAD,CAAOG,KAAK,0BAA0BC,UAAWtB,KACjD,eAAC,KAAD,CAAOqB,KAAK,mBAAmBC,UAAWhL,GAAYiL,OAAK,IAC3D,eAAC,KAAD,CAAOF,KAAK,oBAAoBC,UAAWhL,GAAYiL,OAAK,IAC5D,eAAC,KAAD,CAAOF,KAAK,oCAAoCC,UAAWhL,GAAYiL,OAAK,IAC5E,eAAC,KAAD,CAAOF,KAAK,IAAIC,UAAWhL,GAAYiL,OAAK,SAGlD,eAAC,GAAD,QCrCSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASxP,OACP,eAAC,IAAD,CAAUvD,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFyO,SAASuE,eAAe,SAM1BV,M","file":"static/js/main.a0e6ea9c.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n  } from '../constants/productConstants'\r\n  \r\n  export const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_LIST_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          products: action.payload.products,\r\n          pages: action.payload.pages,\r\n          page: action.payload.page,\r\n        }\r\n      case PRODUCT_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload }\r\n      case PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_UPDATE_RESET:\r\n        return { product: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REVIEW_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_CREATE_REVIEW_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  ","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state, \r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: []}, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return {\r\n                users: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                order: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text' \r\n                name='q' \r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search    \r\n            </Button>            \r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT, \r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users', \r\n            { name, email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const  { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Route render={({ history }) => <SearchBox history={history} />} />\r\n                <Nav className=\"ml-auto\">\r\n                <LinkContainer to='/cart'>\r\n                    <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                </LinkContainer>\r\n                {userInfo ? (\r\n                    <NavDropdown title={userInfo.name} id='username'>\r\n                        <LinkContainer to='/profile'>\r\n                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                ) : (<LinkContainer to='/login'>\r\n                <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n            </LinkContainer>\r\n            )}\r\n            {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                </LinkContainer>\r\n            </NavDropdown>\r\n            )}\r\n                \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 \r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 \r\n                    ? 'fas fa-star' \r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3 \r\n                    ? 'fas fa-star' \r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 \r\n                    ? 'fas fa-star' \r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 \r\n                    ? 'fas fa-star' \r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n\r\n            <Card.Text as='div'>\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n            </Card.Text>\r\n\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n            \r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n            animation='border' \r\n            role='status' \r\n            style={{ \r\n                width: '100px', \r\n                height: '100px', \r\n                margin: 'auto', \r\n                display: 'block',\r\n                }}\r\n            >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x + 1} \r\n                    to={\r\n                        !isAdmin \r\n                            ? keyword \r\n                                ? `/search/${keyword}/page/${x+1}` \r\n                                : `/page/${x+1}` \r\n                                : `/admin/productlist/${x+1}`}\r\n                >\r\n                    <Pagination.Item active={x+1 === page}>\r\n                        {x+1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>\r\n                                {product.name} (${product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to ProShop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap eletronics',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n        <Meta />\r\n        {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate \r\n                    pages={pages} \r\n                    page={page} \r\n                    keyword={keyword ? keyword : ''} \r\n                />\r\n                </>\r\n                )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n        </Link>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n            <Meta title={product.name} />\r\n        <Row>\r\n            <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price: ${product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price:\r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>\r\n                                        ${product.price}\r\n                                    </strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status:\r\n                                </Col>\r\n                                <Col>\r\n                                    {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                            {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={addToCartHandler}\r\n                                className='btn-block' \r\n                                type='button' \r\n                                disabled={product.countInStock === 0}>\r\n                                Add To Cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {product.reviews.length === 0 && <Message>no Reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                    {product.reviews.map(review => (\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>\r\n                                {review.name}\r\n                            </strong>\r\n                            <Rating value={review.rating} />\r\n                            <p>\r\n                                {review.createdAt.substring(0, 10)}\r\n                            </p>\r\n                            <p>\r\n                                {review.comment}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                    <ListGroup.Item>\r\n                        <h2>Write a Customer Review</h2>\r\n                        {errorProductReview && <Message variant='danger'>\r\n                            {errorProductReview}\r\n                            </Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='rating'>\r\n                                    <Form.Label>\r\n                                        Rating\r\n                                    </Form.Label>\r\n                                    <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Poor</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excelent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='comment'>\r\n                                    <Form.Label>\r\n                                        Comment\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        as='textarea'\r\n                                        row='3'\r\n                                        value={comment}\r\n                                        onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' variant='primary'>\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        ) : (\r\n                            <Message>\r\n                                Please <Link to='/login'>sign in</Link> to write a review {' '}</Message>)}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n        )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data. countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    console.log(qty)\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const CheckoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={CheckoutHandler}>\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                            \r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                        type='name' \r\n                        placeholder='Enter Name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                            \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm password' \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                            \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (\r\n    dispatch, \r\n    getState\r\n    ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (\r\n    dispatch, \r\n    getState\r\n    ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders', config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postalCode'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n                <Col>\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='PayPal or Credit Card' \r\n                        id='PayPal' \r\n                        name='paymentMethod' \r\n                        value='PayPal' \r\n                        checked onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                    {/* <Form.Check \r\n                        type='radio' \r\n                        label='Stripe' \r\n                        id='Stripe' \r\n                        name='paymentMethod' \r\n                        value='Stripe' \r\n                        checked onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check> */}\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    //Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    \r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) + \r\n        Number(cart.shippingPrice) + \r\n        Number(cart.taxPrice)\r\n        ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n        \r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderitems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},\r\n                                {cart.shippingAddress.city},\r\n                                {cart.shippingAddress.postalCode},\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your Cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} \r\n                                                    fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if(!loading) {\r\n        //Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [order, orderId, successPay, successDeliver, order]) \r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n        \r\n    return loading ? \r\n        <Loader /> : \r\n        error ? <Message variant='danger'>{error}</Message> : \r\n\r\n        <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> {order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> {' '}\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address:</strong>\r\n                            {order.shippingAddress.address},\r\n                            {order.shippingAddress.city},\r\n                            {order.shippingAddress.postalCode},\r\n                            {order.shippingAddress.country}\r\n                        </p>\r\n                        {order.isDelivered ? (\r\n                            <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? (\r\n                            <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                            <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} \r\n                                                fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {order.qty} x {order.price} = ${order.qty * order.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loader />}\r\n                                {!sdkReady ? <Loader /> : (\r\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        {loadingDeliver && <Loader />}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                    Mark as delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        dispatch(listUsers())\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n      if(window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <h1>Users</h1>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>EMAIL</th>\r\n                  <th>ADMIN</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user._id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>\r\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                    </td>\r\n                    <td>\r\n                      {user.isAdmin ? (\r\n                        <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                      ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          <i className='fas fa-edit'></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      <Button\r\n                        variant='danger'\r\n                        className='btn-sm'\r\n                        onClick={() => deleteHandler(user._id)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </>\r\n      )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter Name' \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email' \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n    \r\n                            </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId='isAdmin'>\r\n                        <Form.Check \r\n                            type='checkbox' \r\n                            label='Is Admin' \r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                                \r\n                        </Form.Check>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            \r\n\r\n        </FormContainer>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { \r\n      loading: loadingDelete, \r\n      error: errorDelete, \r\n      success: successDelete \r\n    } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { \r\n      loading: loadingCreate, \r\n      error: errorCreate, \r\n      success: successCreate,\r\n      product: createdProduct\r\n    } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n      dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin) {\r\n          history.push('/login')\r\n        } \r\n        if(successCreate) {\r\n          history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n          dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [\r\n        dispatch, \r\n        history, \r\n        userInfo, \r\n        successDelete, \r\n        successCreate, \r\n        createdProduct,\r\n        pageNumber\r\n      ])\r\n\r\n    const deleteHandler = (id) => {\r\n      if(window.confirm('Are you sure')) {\r\n        dispatch(deleteProduct(id))\r\n      }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n      dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Products</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i> Create Product\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <>\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>PRICE</th>\r\n                  <th>CATEGORY</th>\r\n                  <th>BRAND</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {products.map((product) => (\r\n                  <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>\r\n                        ${product.price}\r\n                    </td>\r\n                    <td>\r\n                        {product.category}\r\n                    </td>\r\n                    <td>\r\n                        {product.brand}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          <i className='fas fa-edit'></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      <Button\r\n                        variant='danger'\r\n                        className='btn-sm'\r\n                        onClick={() => deleteHandler(product._id)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n            <Paginate pages={pages} page={page} isAdmin={true} />\r\n            </>\r\n          )}\r\n        </>\r\n      )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            brand,\r\n            image,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter Name' \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control \r\n                            type='number' \r\n                            placeholder='Enter price' \r\n                            value={price} \r\n                            onChange={(e) => setPrice(e.target.value)}>\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter image url' \r\n                                value={image} \r\n                                onChange={(e) => setImage(e.target.value)}>\r\n                        </Form.Control>\r\n                        <Form.File \r\n                            id='image-file' \r\n                            label='Choose file' \r\n                            custom onChange={uploadFileHandler}>\r\n                                {uploading && <Loader />}\r\n                        </Form.File>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter brand' \r\n                                value={brand} \r\n                                onChange={(e) => setBrand(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>CountInStock</Form.Label>\r\n                        <Form.Control \r\n                            type='number' \r\n                            placeholder='Enter countInStock' \r\n                            value={countInStock} \r\n                            onChange={(e) => setCountInStock(e.target.value)}>\r\n                            </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter category' \r\n                                value={category} \r\n                                onChange={(e) => setCategory(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter description' \r\n                                value={description} \r\n                                onChange={(e) => setDescription(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            \r\n\r\n        </FormContainer>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n          <h1>Orders</h1>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>USER</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>DELIVERED</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.user && order.user.name}</td>\r\n                    <td>\r\n                        {order.createdAt.substring(0, 10)}\r\n                    </td>\r\n                    <td>\r\n                        ${order.totalPrice}\r\n                    </td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substing(0, 10)\r\n                      ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substing(0, 10)\r\n                      ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      \r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </>\r\n      )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n        <main className='py-3'>\n          <Container>\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/order/:id' component={OrderScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/placeorder' component={PlaceOrderScreen} />\n            <Route path='/shipping' component={ShippingScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/product/:id' component={ProductScreen} />\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/admin/userlist' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n            <Route path='/admin/productlist' component={ProductListScreen} exact />\n            <Route \n              path='/admin/productlist/:pageNumber' \n              component={ProductListScreen} exact />\n            <Route path='/admin/orderlist' component={OrderListScreen} />\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n            <Route path='/search/:keyword' component={HomeScreen} exact />\n            <Route path='/page/:pageNumber' component={HomeScreen} exact />\n            <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n            <Route path='/' component={HomeScreen} exact />\n          </Container>\n        </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}